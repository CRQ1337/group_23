{
	"info": {
		"_postman_id": "a0281182-9060-4736-95a4-12a375234653",
		"name": "DenisY_group_23_HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DenisY_HW2",
			"item": [
				{
					"name": "Task 1 /First_DONE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"///1. Отправить запрос\r",
									"///2. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"///3. Проверить, что в body приходит правильный string.\r",
									"pm.test(\"Correct_string\", function () {\r",
									"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"response": []
				},
				{
					"name": "Task 2 /user_info_3_DONE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"///1. Отправить запрос\r",
									"///2. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"///3. Спарсить response body в json.\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"var resp_n = jsonData.name;\r",
									"var resp_a = jsonData.age;\r",
									"var resp_s = jsonData.salary;\r",
									"\r",
									"///4. Проверить, что name в ответе равно name s request (name вбить руками)\r",
									"pm.test(\"test name\", function () {\r",
									"    pm.expect(resp_n).to.eql(\"Denis\");\r",
									"});\r",
									"\r",
									"///5. Проверить, что age в ответе равно age s request (age вбить руками)\r",
									"pm.test(\"test age\", function () {\r",
									"    pm.expect(resp_a).to.eql(\"28\");\r",
									"});\r",
									"\r",
									"///6. Проверить, что salary в ответе равно salary s request (salary вбить руками)\r",
									"pm.test(\"test salary\", function () {\r",
									"    pm.expect(resp_s).to.eql(700);\r",
									"});\r",
									"\r",
									"///7. Спарсить request.\r",
									"var req_data = request.data;\r",
									"\r",
									"var req_n = req_data.name;\r",
									"var req_a = req_data.age;\r",
									"var req_s = Number(req_data.salary);\r",
									"var resp_us = jsonData.salary*4\r",
									"\r",
									"///8. Проверить, что name в ответе равно name s request (name забрать из request)\r",
									"pm.test(\"test name\", function () {\r",
									"    pm.expect(resp_n).to.eql(req_n);\r",
									"});\r",
									"\r",
									"///9. Проверить, что age в ответе равно age s request (age забрать из request)\r",
									"pm.test(\"test age\", function () {\r",
									"    pm.expect(resp_a).to.eql(req_a);\r",
									"});\r",
									"\r",
									"///10. Проверить, что salary в ответе равно salary s request (salary забрать из request)\r",
									"pm.test(\"test salary\", function () {\r",
									"    pm.expect(resp_s).to.eql(req_s);\r",
									"});\r",
									"\r",
									"///11. Вывести в консоль параметр family из response.\r",
									"console.log(jsonData.family)\r",
									"\r",
									"///12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
									"pm.test(\"test u_salary_1_5_year\", function () {\r",
									"    pm.expect(resp_us).to.eql(req_s*4);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Denis",
									"description": "имя",
									"type": "text"
								},
								{
									"key": "age",
									"value": "28",
									"description": "возраст",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "700",
									"description": "зарплата",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "162.55.220.72:5005/user_info_3",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Task 3 /object_info_3_DONE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"///1. Отправить запрос\r",
									"///2. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"///3. Спарсить response body в json\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"///4. Спарсить request\r",
									"var req_data = pm.request.url.query.toObject();\r",
									"\r",
									"var name = req_data.name;\r",
									"var age = req_data.age;\r",
									"var salary = Number(req_data.salary);\r",
									"\r",
									"///5. Проверить, что name в ответе равно name s request (name забрать из request)\r",
									"pm.test(\"test name\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(name);\r",
									"});\r",
									"\r",
									"///6. Проверить, что age в ответе равно age s request (age забрать из request)\r",
									"pm.test(\"test age\", function () {\r",
									"    pm.expect(jsonData.age).to.eql(age);\r",
									"});\r",
									"\r",
									"///7. Проверить, что salary в ответе равно salary s request (salary забрать из request)\r",
									"pm.test(\"test salary\", function () {\r",
									"    pm.expect(jsonData.salary).to.eql(salary);\r",
									"});\r",
									"\r",
									"///8. Вывести в консоль параметр family из response\r",
									"console.log(jsonData.family);\r",
									"\r",
									"///9. Проверить, что у параметра dog есть параметры name\r",
									"pm.test(\"Dog have param NAME\", function () {\r",
									"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\")\r",
									"});\r",
									"\r",
									"///10. Проверить, что у параметра dog есть параметры age\r",
									"pm.test(\"Dog have param AGE\", function () {\r",
									"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\")\r",
									"});\r",
									"\r",
									"///11. Проверить, что параметр name имеет значение Luky\r",
									"pm.test(\"Dog's name Luky\", function () {\r",
									"    pm.expect(jsonData.family.pets.dog.name).to.eql(\"Luky\")\r",
									"});\r",
									"\r",
									"///12. Проверить, что параметр age имеет значение 4\r",
									"pm.test(\"Dog's age 4\", function () {\r",
									"    pm.expect(jsonData.family.pets.dog.age).to.eql(4)\r",
									"});\r",
									"\r",
									"console.log(\"Dog's name\", jsonData.family.pets.dog.name)\r",
									"console.log(\"Dog's age\" , jsonData.family.pets.dog.age)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_3?name=Denis&age=28&salary=700",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Denis",
									"description": "имя"
								},
								{
									"key": "age",
									"value": "28",
									"description": "возраст"
								},
								{
									"key": "salary",
									"value": "700",
									"description": "зарплата"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Task 4 /object_info_4_DONE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"///1. Отправить запрос\r",
									"///2. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"///3. Спарсить response body в json\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"\r",
									"///4. Спарсить request\r",
									"var req_data = pm.request.url.query.toObject();\r",
									"\r",
									"var req_name = req_data.name;\r",
									"var req_age = req_data.age;\r",
									"var req_salary = Number(req_data.salary);\r",
									"\r",
									"///5. Проверить, что name в ответе равно name s request (name забрать из request)\r",
									"pm.test(\"test name\", function () {\r",
									"    pm.expect(jsonData.name).to.eql(req_name);\r",
									"});\r",
									"\r",
									"///6. Проверить, что age в ответе равно age из request (age забрать из request)\r",
									"pm.test(\"test age\", function () {\r",
									"    pm.expect(String(jsonData.age)).to.eql(req_age);\r",
									"});\r",
									"\r",
									"///7. Вывести в консоль параметр salary из request\r",
									"console.log(req_data.salary);\r",
									"\r",
									"///8. Вывести в консоль параметр salary из response.\r",
									"console.log(jsonData.salary);\r",
									"\r",
									"///9. Вывести в консоль 0-й элемент параметра salary из response.\r",
									"console.log(jsonData.salary[0]);\r",
									"\r",
									"///10. Вывести в консоль 1-й элемент параметра salary параметр salary из response\r",
									"console.log(jsonData.salary[1]);\r",
									"\r",
									"///11. Вывести в консоль 2-й элемент параметра salary параметр salary из response\r",
									"console.log(jsonData.salary[2]);\r",
									"\r",
									"var resp_s700 = jsonData.salary[0];\r",
									"var resp_s1400 = Number(jsonData.salary [1]);\r",
									"var resp_s2100 = Number(jsonData.salary [2]);\r",
									"\r",
									"///12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request)\r",
									"pm.test(\"test salary[0] 700\", function () {\r",
									"    pm.expect(resp_s700).to.eql(req_salary);\r",
									"});\r",
									"\r",
									"///13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request)\r",
									"pm.test(\"test salary[1] 1400\", function () {\r",
									"    pm.expect(resp_s1400).to.eql(req_salary*2);\r",
									"});\r",
									"\r",
									"///14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request)\r",
									"pm.test(\"test salary[2] 2100\", function () {\r",
									"    pm.expect(resp_s2100).to.eql(req_salary*3);\r",
									"});\r",
									"\r",
									"console.log(\"RespSalary700 = \", + resp_s700);\r",
									"console.log(\"RespSalary1400 = \", resp_s1400);\r",
									"console.log(\"RespSalary2100 = \", resp_s2100);\r",
									"\r",
									"///15. Создать в окружении переменную name\r",
									"///18. Передать в окружение ремённую переменную name\r",
									"pm.environment.set(\"name\", req_data.name);\r",
									"\r",
									"///16. Создать в окружении переменную age\r",
									"///19. Передать в окружение ремённую переменную age\r",
									"pm.environment.set(\"age\", req_data.age);\r",
									"\r",
									"///17. Создать в окружении переменную salary\r",
									"///20. Передать в окружение ремённую переменную salary\r",
									"pm.environment.set(\"salary\", req_data.salary);\r",
									"\r",
									"///21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary\r",
									"var salary = jsonData.salary;\r",
									"for (var prop in salary){ \r",
									"  console.log(\"salary.\" + prop + \" = \" + salary[prop]);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "162.55.220.72:5005/object_info_4?name=Denis&age=28&salary=700",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Denis",
									"description": "имя"
								},
								{
									"key": "age",
									"value": "28",
									"description": "возраст"
								},
								{
									"key": "salary",
									"value": "700",
									"description": "зарплата"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Task 5 /user_info_2_DONE",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"///1. Вставить параметр salary из окружения в request\r",
									"///2. Вставить параметр age из окружения в age\r",
									"///3. Вставить параметр name из окружения в name\r",
									"///4. Отправить запрос\r",
									"///5. Статус код 200\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"///6. Спарсить response body в json\r",
									"var resp_data = pm.response.json();\r",
									"\r",
									"///7. Спарсить request\r",
									"var req_data = request.data;\r",
									"\r",
									"console.log(resp_data)\r",
									"var sSalary = Number(req_data.salary);\r",
									"var Salary_6m = Number(req_data.salary*2);\r",
									"var Salary_12m = Number(req_data.salary*2.7)\r",
									"var Salary_1_5y = Number(req_data.salary*3.3);\r",
									"var Salary_3_5y = Number(req_data.salary*3.8);\r",
									"\r",
									"///8. Проверить, что json response имеет параметр start_qa_salary\r",
									"pm.test(\"start_qa_salary\", function () {\r",
									"    pm.expect(resp_data).to.have.property(\"start_qa_salary\")\r",
									"});\r",
									"console.log(\"resp_data have 'start_qa_salary'\", resp_data.start_qa_salary)\r",
									"\r",
									"///9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
									"pm.test(\"salary_after_6_months\", function () {\r",
									"    pm.expect(resp_data).to.have.property(\"qa_salary_after_6_months\")\r",
									"});\r",
									"console.log(\"resp_data have 'salary_after_6_months'\", resp_data.qa_salary_after_6_months)\r",
									"\r",
									"///10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
									"pm.test(\"salary_after_12_months\", function () {\r",
									"    pm.expect(resp_data).to.have.property(\"qa_salary_after_12_months\")\r",
									"});\r",
									"console.log(\"resp_data have 'salary_after_12_months'\", resp_data.qa_salary_after_12_months)\r",
									"\r",
									"///11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
									"pm.test(\"salary_after_1.5_year\", function () {\r",
									"    pm.expect(resp_data).to.have.property(\"qa_salary_after_1.5_year\")\r",
									"});\r",
									"console.log(\"resp_data have 'salary_after_1.5_year'\", resp_data[\"qa_salary_after_1.5_year\"])\r",
									"\r",
									"///12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
									"pm.test(\"salary_after_3.5_years\", function () {\r",
									"    pm.expect(resp_data).to.have.property(\"qa_salary_after_3.5_years\")\r",
									"});\r",
									"console.log(\"resp_data have 'salary_after_3.5_years'\", resp_data [\"qa_salary_after_3.5_years\"]);\r",
									"\r",
									"///13. Проверить, что json response имеет параметр person\r",
									"pm.test(\"person\", function () {\r",
									"    pm.expect(resp_data).to.have.property(\"person\")\r",
									"});\r",
									"console.log(\"resp_data have 'person'\", resp_data.person);\r",
									"\r",
									"///14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request)\r",
									"pm.test(\"start_qa_salary\", function () {\r",
									"    pm.expect(resp_data.start_qa_salary).to.eql(sSalary)\r",
									"});\r",
									"console.log(\"resp_data eql req_data 'start_qa_salary' = \" ,  sSalary)\r",
									"\r",
									"///15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request)\r",
									"pm.test(\"salary_after_6_months\", function () {\r",
									"    pm.expect(resp_data.qa_salary_after_6_months).to.eql(Salary_6m)\r",
									"});\r",
									"console.log(\"resp_data eql req_data 'salary_after_6_months' = \", Salary_6m)\r",
									"\r",
									"///16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request)\r",
									"pm.test(\"salary_after_12_months\", function () {\r",
									"    pm.expect(resp_data.qa_salary_after_12_months).to.eql(Salary_12m)\r",
									"});\r",
									"console.log(\"resp_data eql req_data 'salary_after_12_months'\", Salary_12m)\r",
									"\r",
									"///17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request)\r",
									"pm.test(\"salary_after_1.5_year\", function () {\r",
									"    pm.expect(resp_data[\"qa_salary_after_1.5_year\"]).to.eql(Salary_1_5y)\r",
									"});\r",
									"console.log(\"resp_data eql req_data 'salary_after_1.5_year'\", Salary_1_5y)\r",
									"\r",
									"///18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request)\r",
									"pm.test(\"salary_after_3.5_years\", function () {\r",
									"    pm.expect(resp_data[\"qa_salary_after_3.5_years\"]).to.eql(Salary_3_5y)\r",
									"});\r",
									"console.log(\"resp_data eql req_data 'salary_after_3.5_years'\", Salary_3_5y)\r",
									"\r",
									"var u_nameArr = resp_data.person.u_name;  /// [\"Denis\", 700, 28]\r",
									"var u_name0 = resp_data.person.u_name[0]; /// \"Denis\" \r",
									"var u_name1 = resp_data.person.u_name[1]; /// 700\r",
									"var u_name2 = resp_data.person.u_name[2]; /// 28\r",
									"var req_age = Number(req_data.age);\r",
									"var u_age = resp_data.person.u_age;\r",
									"\r",
									"\r",
									"///19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request)\r",
									"pm.test(\"u_name's 1st elem = salary\", function () {\r",
									"    pm.expect(u_name1).to.eql(sSalary)\r",
									"});\r",
									"console.log(\"u_name's 1st elem not eql salary \", u_nameArr, req_data.salary);\r",
									"\r",
									"///20. Проверить, что что параметр u_age равен age из request (age забрать из request)\r",
									"pm.test(\"u_age = req_age\", function () {\r",
									"    pm.expect(u_age).to.eql(req_age)\r",
									"});\r",
									"console.log(\"u_age eql req_age \", u_age, req_age);\r",
									"\r",
									"var Salary_5y = Number(req_data.salary*4.2);\r",
									"\r",
									"///21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request)\r",
									"pm.test(\"salary_after_5_years\", function () {\r",
									"    pm.expect(resp_data.person.u_salary_5_years).to.eql(Salary_5y)\r",
									"});\r",
									"console.log(\"resp_data eql req_data 'salary_5_years'\", Salary_5y)\r",
									"\r",
									"///22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
									"var person = resp_data.person;\r",
									"for (var prop in person){ \r",
									"  console.log(\"person.\" + prop + \" = \" + person[prop]);\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "162.55.220.72:5005/user_info_2",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}